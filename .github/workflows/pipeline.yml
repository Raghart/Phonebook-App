name: Deployment pipeline

on:
  push:
    branches: [ main, master ]
  
  pull_request:
    branches: [ main, master ]
    types: [opened, synchronize]

jobs:
  phonebook_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install
      - name: Run Tests
        working-directory: ./frontend
        run: npm test

  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Build Frontend
      run: npm run build
    - name: Run server
      run: npm run start &
    - name: Build Backend
      working-directory: ./backend
      run: npm install
    - name: Run backend
      working-directory: ./backend
      env:
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
      run: npm run start &
    - name: Run Playwright tests
      run: npm run test:e2e
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30


  tag_release:
    if: "github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#Skip')"
    needs: [phonebook_deployment_pipeline, playwright-tests]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
      - name: Trigger deployment
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  discord_notification:
    runs-on: ubuntu-20.04
    needs: [tag_release, phonebook_deployment_pipeline, playwright-tests]
    steps:
    - name: Discord Sucess Test
      uses: tsickert/discord-webhook@v7.0.0
      if: success()
      with:
        content: "✅ New Phonebook build released!"
        embed-title: "This build has passed all tests"
        embed-description: |
          New version updated in https://phonebook-app-part11.onrender.com/ by ${{ github.actor }}
          Severity: Informational
          Release date: ${{ github.event.head_commit.timestamp }}
        embed-color: "65280"
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}

    - name: Discord Failure Test
      uses: tsickert/discord-webhook@v7.0.0
      if: failure()
      with:
        content: "❌ Build failed!"
        embed-title: "A test on this build has failed"
        embed-description: |
          The version in the commmit uploaded by ${{ github.actor }} has failed...
          Commit URL: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
          Severity: Error
          Release date: ${{ github.event.head_commit.timestamp }}
        embed-color: "16711680"
        webhook-url: ${{ secrets.DISCORD_WEBHOOK }}
